# Generated by Django 5.1.1 on 2024-10-12 09:04

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email address')),
                ('phone', models.IntegerField(blank=True, null=True, verbose_name='Phone')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='Name')),
                ('language', models.CharField(choices=[('KY', 'Кыргыз'), ('RU', 'Русский'), ('EN', 'English')], default='EN', max_length=150, verbose_name='Language')),
                ('balance', models.IntegerField(default=0)),
                ('code', models.IntegerField(blank=True, null=True, verbose_name='Activation code')),
                ('_avatar', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Avatar')),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('-date_joined',),
            },
        ),
        migrations.CreateModel(
            name='BusinessAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tariff_plan', models.IntegerField(verbose_name='Tariff plan')),
                ('deadline', models.DateTimeField(verbose_name='Deadline')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TariffPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Basic', 'Basic'), ('Advanced', 'Advanced'), ('Expert', 'Expert')], max_length=50, verbose_name='Tariff name')),
                ('price', models.IntegerField(verbose_name='Price')),
                ('duration_days', models.IntegerField(choices=[(30, '1 month'), (90, '3 months'), (180, '6 months'), (365, '12 months')], verbose_name='Duration in days')),
                ('limit', models.IntegerField(verbose_name='Limit')),
                ('own_branded_page', models.BooleanField(default=False, verbose_name='собственная брендированная страница')),
                ('auto_up', models.BooleanField(default=False, verbose_name='UP')),
                ('placement_on_main_page', models.BooleanField(default=False, verbose_name='размещение на главной странице сайта и в мобильных приложениях')),
                ('tag_with_company_name', models.BooleanField(default=False, verbose_name='метка на объявлениях с названием вашей компании')),
                ('no_ad_photos', models.BooleanField(default=False, verbose_name='отсутствие рекламы среди фотографий объявления')),
                ('without_competitors', models.BooleanField(default=False, verbose_name='отсутствие конкурентов под вашим объявлением')),
                ('auto_business_priority', models.BooleanField(default=False, verbose_name='приоритет в разделе Автобизнес (выше планов Базовый и Продвинутый)')),
                ('crm_sync', models.BooleanField(default=False, verbose_name='автоматическая загрузка объявлений с вашего сайта или CRM')),
                ('search_by_ads', models.BooleanField(default=False, verbose_name='поиск по вашим объявлениям')),
                ('body_condition_status', models.BooleanField(default=False, verbose_name='возможность отметить состояние кузова')),
            ],
            options={
                'verbose_name': 'Tariff Plan',
                'verbose_name_plural': 'Tariff Plans',
                'unique_together': {('name', 'duration_days')},
            },
        ),
    ]
